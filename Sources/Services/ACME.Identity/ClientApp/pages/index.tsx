import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, {useEffect, useState} from "react"
import {useRouter} from "next/router";
import {ParsedUrlQuery} from "querystring";


const Home = ()=> {
    const router = useRouter()
    const [queryStringParams, setQueryStringParams] = useState<ParsedUrlQuery>()

    useEffect(() => {
        const paramsObject: { [key: string]: string } = {}
        const splitUrl = router.asPath.split('?')
        splitUrl.shift()
        const decoded = decodeURIComponent(splitUrl.join(''))
        const searchParams = new URLSearchParams(decoded)


        searchParams.forEach((value: string, key: string) => (paramsObject[key] = value))
        setQueryStringParams(paramsObject)
    }, [router.query])

    console.log(queryStringParams)

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
          <form action="/api/account/login" method="post">
              <label htmlFor="email">email</label><br />
              <input type="text" id="email" name="email" /><br />
              <label htmlFor="password">password</label><br/>
              <input type="text" id="password" name="password" />
              <input type="submit" value="Submit"></input>
              {!!queryStringParams?.ReturnUrl && <input type="hidden" name="ReturnUrl" value={queryStringParams.ReturnUrl} />}
              {!!queryStringParams?.redirect_uri && <input type="hidden" name="redirect_uri" value={queryStringParams.redirect_uri} />}
              {!!queryStringParams?.client_id && <input type="hidden" name="client_id" value={queryStringParams.client_id} />}
              {!!queryStringParams?.response_type && <input type="hidden" name="response_type" value={queryStringParams.response_type} />}
              {!!queryStringParams?.state && <input type="hidden" name="state" value={queryStringParams.state} />}
              {!!queryStringParams?.scope && <input type="hidden" name="scope" value={queryStringParams.scope} />}
              {!!queryStringParams?.code_challenge && <input type="hidden" name="code_challenge" value={queryStringParams.code_challenge} />}
              {!!queryStringParams?.code_challenge_method && <input type="hidden" name="code_challenge_method" value={queryStringParams.code_challenge_method} />}
              {!!queryStringParams?.response_mode && <input type="hidden" name="response_mode" value={queryStringParams.response_mode} />}
              {!!queryStringParams?.nonce && <input type="hidden" name="nonce" value={queryStringParams.nonce} />}
          </form>
      </main>

      <footer className={styles.footer}>
          <p><a href="/swagger">Klik hier om naar de swagger te gaan</a></p>
          <a
              className="App-link"
              href="/swagger"
              target="_blank"
              rel="noopener noreferrer"
          >
              Learn React
          </a>
      </footer>
    </div>
  )
}

export default Home